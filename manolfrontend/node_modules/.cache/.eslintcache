[{"C:\\Users\\mastan.mastanov\\IdeaProjects\\Manol\\manolfrontend\\src\\index.js":"1","C:\\Users\\mastan.mastanov\\IdeaProjects\\Manol\\manolfrontend\\src\\App.js":"2","C:\\Users\\mastan.mastanov\\IdeaProjects\\Manol\\manolfrontend\\src\\reportWebVitals.js":"3","C:\\Users\\mastan.mastanov\\IdeaProjects\\Manol\\manolfrontend\\src\\api\\UserService.js":"4","C:\\Users\\mastan.mastanov\\IdeaProjects\\Manol\\manolfrontend\\src\\api\\axios.js":"5","C:\\Users\\mastan.mastanov\\IdeaProjects\\Manol\\manolfrontend\\src\\context\\AuthProvider.js":"6","C:\\Users\\mastan.mastanov\\IdeaProjects\\Manol\\manolfrontend\\src\\Register.js":"7","C:\\Users\\mastan.mastanov\\IdeaProjects\\Manol\\manolfrontend\\src\\Login.js":"8","C:\\Users\\mastan.mastanov\\IdeaProjects\\Manol\\manolfrontend\\src\\Home.js":"9","C:\\Users\\mastan.mastanov\\IdeaProjects\\Manol\\manolfrontend\\src\\Test.js":"10"},{"size":516,"mtime":1655118362239,"results":"11","hashOfConfig":"12"},{"size":442,"mtime":1655450562511,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1654609187436,"results":"14","hashOfConfig":"12"},{"size":2385,"mtime":1655476682658,"results":"15","hashOfConfig":"12"},{"size":102,"mtime":1654684346298,"results":"16","hashOfConfig":"12"},{"size":350,"mtime":1654768716921,"results":"17","hashOfConfig":"12"},{"size":8653,"mtime":1655315262484,"results":"18","hashOfConfig":"12"},{"size":3292,"mtime":1655476677293,"results":"19","hashOfConfig":"12"},{"size":5469,"mtime":1655705910571,"results":"20","hashOfConfig":"12"},{"size":174,"mtime":1655454203566,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"299lyk",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"25"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mastan.mastanov\\IdeaProjects\\Manol\\manolfrontend\\src\\index.js",[],[],[],"C:\\Users\\mastan.mastanov\\IdeaProjects\\Manol\\manolfrontend\\src\\App.js",[],[],"C:\\Users\\mastan.mastanov\\IdeaProjects\\Manol\\manolfrontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\mastan.mastanov\\IdeaProjects\\Manol\\manolfrontend\\src\\api\\UserService.js",["56"],[],"import axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nconst LOGIN_REST_API_URL = \"http://localhost:8080/get/user/\";\r\nconst REGISTER_REST_API_URL_POST = \"http://localhost:8080/registration\";\r\nconst ENTER_PERIOD_REST_API_URL = \"http://localhost:8080/period\";\r\nconst GET_PERIOD_REST_API_URL = \"http://localhost:8080/period/get/\"+ localStorage.getItem(\"JWTToken\");\r\nconst ENTER_EVENT_REST_API_URL_POST = \"http://localhost:8080/event\";\r\nconst GET_EVENT_REST_API_URL = \"http://localhost:8080/event/get/\"+ localStorage.getItem(\"JWTToken\");\r\nconst GET_USER_REST_API_URL = \"http://localhost:8080/currentUser/get/\"+ localStorage.getItem(\"JWTToken\");\r\nclass UserService {\r\n  loginUser(email, password) {\r\n    return axios.get(LOGIN_REST_API_URL + email + \"&\" + password);\r\n  }\r\n\r\n  getUser() {\r\n    return axios.get(GET_USER_REST_API_URL);\r\n  }\r\n  registerUser() {\r\n    let firstNameVal = document.getElementById(\"FirstName\").value;\r\n    let LastNameVal = document.getElementById(\"LastName\").value;\r\n    let emailVal = document.getElementById(\"email\").value;\r\n    let passwordVal = document.getElementById(\"password\").value;\r\n    let AddressVal = document.getElementById(\"Address\").value;\r\n    let dobVal = document.getElementById(\"DOB\").value;\r\n    let postToSave = {\r\n      firstName: firstNameVal,\r\n      lastName: LastNameVal,\r\n      email: emailVal,\r\n      password: passwordVal,\r\n      dob: dobVal,\r\n      address: AddressVal,\r\n    };\r\n    return axios.post(REGISTER_REST_API_URL_POST, postToSave);\r\n  }\r\n\r\n  getEvent() {\r\n    return axios.get(GET_EVENT_REST_API_URL);\r\n  }\r\n  enterEvent(usID) {\r\n\r\n\r\n    let titleVal = document.getElementById(\"eventId\").value;\r\n    let textVal = document.getElementById(\"TODOText\").value;\r\n    let dateVal = document.getElementById(\"endDateId\").value;\r\n    let userIdVal = usID;\r\n    let eventToSave = {\r\n      title: titleVal,\r\n      text: textVal,\r\n      date: dateVal,\r\n      userId: userIdVal,\r\n    };\r\n\r\n    return axios.post(ENTER_EVENT_REST_API_URL_POST, eventToSave);\r\n  }\r\n\r\n  getPeriod() {\r\n    return axios.get(GET_PERIOD_REST_API_URL);\r\n  }\r\n  enterPeriod(usID) {\r\n    let startDateVal = document.getElementById(\"PeriodStartDateId\").value;\r\n    let periodToSave = {\r\n      startDate:startDateVal,\r\n      userId:usID,\r\n    };\r\n    return axios.post(ENTER_PERIOD_REST_API_URL,periodToSave);\r\n  }\r\n}\r\nexport default new UserService();\r\n","C:\\Users\\mastan.mastanov\\IdeaProjects\\Manol\\manolfrontend\\src\\api\\axios.js",[],[],[],"C:\\Users\\mastan.mastanov\\IdeaProjects\\Manol\\manolfrontend\\src\\context\\AuthProvider.js",[],[],"C:\\Users\\mastan.mastanov\\IdeaProjects\\Manol\\manolfrontend\\src\\Register.js",["57"],[],"import { useRef, useState, useEffect } from \"react\";\r\nimport {\r\n  faCheck,\r\n  faTimes,\r\n  faInfoCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserService from \"./api/UserService\";\r\n\r\nconst EMAIL_Regex =\r\n  /^[a-zA-Z0-9.! #$%&'*+\\==? ^_`{|}~-]+@([a-zA-Z0-9-]+\\.)+[[a-zA-Z0-9-]{2,4}$/;\r\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\r\n\r\nconst Register = () => {\r\n  const userRef = useRef();\r\n  const errRef = useRef();\r\n\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastname, setLastName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [dob, setDob] = useState(\"\");\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [validName, setValidName] = useState(false);\r\n  const [userFocus, setUserFocus] = useState(false);\r\n\r\n  const [pwd, setPwd] = useState(\"\");\r\n  const [validPwd, setValidPwd] = useState(false);\r\n  const [pwdFocus, setPwdFocus] = useState(false);\r\n\r\n  const [matchPwd, setMatchPwd] = useState(\"\");\r\n  const [validMatch, setValidMatch] = useState(false);\r\n  const [matchFocus, setMatchFocus] = useState(false);\r\n\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  useEffect(() => {\r\n    userRef.current.focus();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setValidName(EMAIL_Regex.test(email));\r\n  }, [email]);\r\n\r\n  useEffect(() => {\r\n    setValidPwd(PWD_REGEX.test(pwd));\r\n    setValidMatch(pwd === matchPwd);\r\n  }, [pwd, matchPwd]);\r\n\r\n  useEffect(() => {\r\n    setErrMsg(\"\");\r\n  }, [email, pwd, matchPwd]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setSuccess(true);\r\n    } catch (err) {}\r\n  };\r\n  return (\r\n    <>\r\n      {success ? (\r\n        <section>\r\n          <h1>Success!</h1>\r\n          <h1>Check your email to confirm your</h1>\r\n          <p>\r\n            <Link to=\"/\">Sign In</Link>\r\n          </p>\r\n        </section>\r\n      ) : (\r\n        <section>\r\n          <p\r\n            ref={errRef}\r\n            className={errMsg ? \"errmsg\" : \"offscreen\"}\r\n            aria-live=\"assertive\"\r\n          >\r\n            {errMsg}\r\n          </p>\r\n          <h1>Register</h1>\r\n          <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"FirstName\">FirstName:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"FirstName\"\r\n              ref={userRef}\r\n              autoComplete=\"off\"\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n              value={firstName}\r\n              required\r\n              aria-describedby=\"uidnote\"\r\n              onFocus={() => setUserFocus(true)}\r\n              onBlur={() => setUserFocus(false)}\r\n            />\r\n            <label htmlFor=\"LastNanme\">LastName:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"LastName\"\r\n              ref={userRef}\r\n              autoComplete=\"off\"\r\n              onChange={(e) => setLastName(e.target.value)}\r\n              value={lastname}\r\n              required\r\n              aria-describedby=\"uidnote\"\r\n              onFocus={() => setUserFocus(true)}\r\n              onBlur={() => setUserFocus(false)}\r\n            />\r\n\r\n            <label htmlFor=\"email\">\r\n              Email:\r\n              <FontAwesomeIcon\r\n                icon={faCheck}\r\n                className={validName ? \"valid\" : \"hide\"}\r\n              />\r\n              <FontAwesomeIcon\r\n                icon={faTimes}\r\n                className={validName || !email ? \"hide\" : \"invalid\"}\r\n              />\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"email\"\r\n              ref={userRef}\r\n              autoComplete=\"off\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n              required\r\n              aria-invalid={validName ? \"false\" : \"true\"}\r\n              aria-describedby=\"uidnote\"\r\n              onFocus={() => setUserFocus(true)}\r\n              onBlur={() => setUserFocus(false)}\r\n            />\r\n            <p\r\n              id=\"uidnote\"\r\n              className={\r\n                userFocus && email && !validName ? \"instructions\" : \"offscreen\"\r\n              }\r\n            >\r\n              <FontAwesomeIcon icon={faInfoCircle} />\r\n              4 to 24 characters.\r\n              <br />\r\n              <br />\r\n              Letters, numbers, underscores, hyphens allowed.\r\n            </p>\r\n\r\n            <label htmlFor=\"password\">\r\n              Password:\r\n              <FontAwesomeIcon\r\n                icon={faCheck}\r\n                className={validPwd ? \"valid\" : \"hide\"}\r\n              />\r\n              <FontAwesomeIcon\r\n                icon={faTimes}\r\n                className={validPwd || !pwd ? \"hide\" : \"invalid\"}\r\n              />\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={(e) => setPwd(e.target.value)}\r\n              value={pwd}\r\n              required\r\n              aria-invalid={validPwd ? \"false\" : \"true\"}\r\n              aria-describedby=\"pwdnote\"\r\n              onFocus={() => setPwdFocus(true)}\r\n              onBlur={() => setPwdFocus(false)}\r\n            />\r\n            <p\r\n              id=\"pwdnote\"\r\n              className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}\r\n            >\r\n              <FontAwesomeIcon icon={faInfoCircle} />\r\n              8 to 24 characters.\r\n              <br />\r\n              Must include uppercase and lowercase letters, a number and a\r\n              special character.\r\n              <br />\r\n              Allowed special characters:{\" \"}\r\n              <span aria-label=\"exclamation mark\">!</span>{\" \"}\r\n              <span aria-label=\"at symbol\">@</span>{\" \"}\r\n              <span aria-label=\"hashtag\">#</span>{\" \"}\r\n              <span aria-label=\"dollar sign\">$</span>{\" \"}\r\n              <span aria-label=\"percent\">%</span>\r\n            </p>\r\n\r\n            <label htmlFor=\"confirm_pwd\">\r\n              Confirm Password:\r\n              <FontAwesomeIcon\r\n                icon={faCheck}\r\n                className={validMatch && matchPwd ? \"valid\" : \"hide\"}\r\n              />\r\n              <FontAwesomeIcon\r\n                icon={faTimes}\r\n                className={validMatch || !matchPwd ? \"hide\" : \"invalid\"}\r\n              />\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirm_pwd\"\r\n              onChange={(e) => setMatchPwd(e.target.value)}\r\n              value={matchPwd}\r\n              required\r\n              aria-invalid={validMatch ? \"false\" : \"true\"}\r\n              aria-describedby=\"confirmnote\"\r\n              onFocus={() => setMatchFocus(true)}\r\n              onBlur={() => setMatchFocus(false)}\r\n            />\r\n            <p\r\n              id=\"confirmnote\"\r\n              className={\r\n                matchFocus && !validMatch ? \"instructions\" : \"offscreen\"\r\n              }\r\n            >\r\n              <FontAwesomeIcon icon={faInfoCircle} />\r\n              Must match the first password input field.\r\n            </p>\r\n\r\n            <label htmlFor=\"DOB\">Date of Birth:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"DOB\"\r\n              ref={userRef}\r\n              autoComplete=\"off\"\r\n              onChange={(e) => setDob(e.target.value)}\r\n              value={dob}\r\n              required\r\n              aria-describedby=\"uidnote\"\r\n              onFocus={() => setUserFocus(true)}\r\n              onBlur={() => setUserFocus(false)}\r\n            />\r\n\r\n            <label htmlFor=\"Address\">Address:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"Address\"\r\n              ref={userRef}\r\n              autoComplete=\"off\"\r\n              onChange={(e) => setAddress(e.target.value)}\r\n              value={address}\r\n              required\r\n              aria-describedby=\"uidnote\"\r\n              onFocus={() => setUserFocus(true)}\r\n              onBlur={() => setUserFocus(false)}\r\n            />\r\n\r\n            <button\r\n              onClick={UserService.registerUser}\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={!validName || !validPwd || !validMatch ? true : false}\r\n            >\r\n              Sign Up\r\n            </button>\r\n          </form>\r\n          <p>\r\n            Already registered?\r\n            <br />\r\n            <span className=\"line\">\r\n              <Link to=\"/\">Sign In</Link>\r\n            </span>\r\n          </p>\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\mastan.mastanov\\IdeaProjects\\Manol\\manolfrontend\\src\\Login.js",[],[],"C:\\Users\\mastan.mastanov\\IdeaProjects\\Manol\\manolfrontend\\src\\Home.js",["58"],[],"C:\\Users\\mastan.mastanov\\IdeaProjects\\Manol\\manolfrontend\\src\\Test.js",[],[],{"ruleId":"59","severity":1,"message":"60","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":16},{"ruleId":"63","severity":1,"message":"64","line":12,"column":25,"nodeType":"65","messageId":"66","endLine":12,"endColumn":26,"suggestions":"67"},{"ruleId":"59","severity":1,"message":"68","line":13,"column":10,"nodeType":"61","messageId":"62","endLine":13,"endColumn":29},"no-unused-vars","'format' is defined but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\=.","Literal","unnecessaryEscape",["69","70"],"'DatePickerComponent' is defined but never used.",{"messageId":"71","fix":"72","desc":"73"},{"messageId":"74","fix":"75","desc":"76"},"removeEscape",{"range":"77","text":"78"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"79","text":"80"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[352,353],"",[352,352],"\\"]